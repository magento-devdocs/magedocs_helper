# frozen_string_literal: true

# This file contains tasks with no namespace.
# All namespaced tasks are defined in the '../rakelib' directory.
# Each namespace is defined in a separate file.
# For example, 'test:md' is defined in the '../rakelib/test.rake' file.
# To see the list of tasks to use, run 'rake -T'.

require 'colorator'
require 'html-proofer'
require 'kramdown'
require 'launchy'

# Load rake tasks from 'tasks/'
path = File.expand_path(__dir__)
Dir.glob("#{path}/tasks/**/*.rake").each { |f| import f }

# Require helper methods from the 'lib' directory
Dir.glob('lib/**/*.rb') { |file| require_relative(file) }

# desc "Same as 'rake', 'rake preview'"
# task default: %w[preview]

desc "Same as 'test:report'"
task test: %w[test:md test:report]

task :clean do
  print 'Cleaning after the last site generation: $ '.magenta
  sh 'bundle exec jekyll clean'
  puts 'Clean!'.green
end

task :install do
  print 'Install gems listed in the Gemfile: $ '.magenta
  sh 'bundle install'
  puts 'Installed!'.green
end

desc 'Run checks (image optimization and Markdown style linting).'
task check: %w[check:image_optim check:mdl]

desc 'Generate data for a news digest. Default timeframe is a week since today. For other period, use "since" argument: since="jul 4"'
task :whatsnew do
  date = ENV['since']
  print 'Generating data for the weekly digest: $ '.magenta
  if date.nil? or date.empty?
    sh 'bundle exec whatsup_github'
  elsif date.is_a? String
    sh 'bundle exec whatsup_github', 'since', ENV['since'].to_s
  else
    puts 'The "since" argument must be a string. Example: "jul 4"'
  end
end

desc 'Convert HTML text to kramdown in your terminal'
task :convert do
  puts 'Paste HTML text followed by a new line and press Control-D.'.magenta
  result = `bundle exec kramdown --input=html --output=kramdown`
  puts 'Converted text:'.magenta
  puts result.bold
end
